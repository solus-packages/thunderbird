diff --git a/third_party/rnp/src/librepgp/stream-common.cpp b/third_party/rnp/src/librepgp/stream-common.cpp
--- a/third_party/rnp/src/librepgp/stream-common.cpp
+++ b/third_party/rnp/src/librepgp/stream-common.cpp
@@ -305,30 +305,38 @@
 bool
 src_peek_line(pgp_source_t *src, char *buf, size_t len, size_t *readres)
 {
-    size_t clen = 0;
-    size_t read;
-
-    /* we need some place for \0 */
-    len--;
+    size_t scan_pos = 0;
+    size_t can_read_max = len -1; /* we need some place for \0 */
 
     do {
-        read = clen + 64 > len ? len - clen : 64;
-        if (!src_peek(src, buf + clen, read, &read) || !read) {
+        size_t want_to_read;
+        size_t bytes_obtained;
+        size_t can_read_max_remaining = can_read_max - scan_pos;
+
+        want_to_read = scan_pos + (can_read_max_remaining > 64 ? 64 : can_read_max_remaining);
+
+        /* inefficient, each time we again read from the beginning */
+        if (!src_peek(src, buf, want_to_read, &bytes_obtained) ||
+            !bytes_obtained) {
             return false;
         }
 
-        for (size_t i = 0; i < read; i++) {
-            if (buf[clen] == '\n') {
-                if ((clen > 0) && (buf[clen - 1] == '\r')) {
-                    clen--;
+        /* we continue scanning where we stopped previously */
+        for (; scan_pos < bytes_obtained; scan_pos++) {
+            if (buf[scan_pos] == '\n') {
+                if ((scan_pos > 0) && (buf[scan_pos - 1] == '\r')) {
+                    scan_pos--;
                 }
-                buf[clen] = '\0';
-                *readres = clen;
+                buf[scan_pos] = '\0';
+                *readres = scan_pos;
                 return true;
             }
-            clen++;
         }
-    } while (clen < len);
+
+        if (bytes_obtained < want_to_read) {
+          return false;
+        }
+    } while (scan_pos < can_read_max);
     return false;
 }
 

